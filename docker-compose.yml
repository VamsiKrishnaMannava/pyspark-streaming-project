#version: '3.9'

services:
  postgres:
    image: postgres:16
    container_name: postgresdb-container
    environment:
      - TZ=Europe/London
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka-container
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-container:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_MESSAGE_MAX_BYTES=1048588
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=yes
    ports:
      - "9092:9092"
      - "9093:9093"

  spark:
    image: bitnami/spark:latest
    container_name: spark-container
    environment:
      - SPARK_MODE=master
      - HOME=/opt/bitnami/spark
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - ./app:/app
    depends_on:
      - kafka
    #command: ["/bin/bash", "-c", "/app/init.sh && /opt/bitnami/scripts/spark/entrypoint.sh /opt/bitnami/scripts/spark/run.sh"]

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker-container
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-container:7077
      - HOME=/opt/bitnami/spark
    volumes:
      - ./app:/app
    depends_on:
      - spark
    #command: ["/bin/bash", "-c", "/app/init.sh && /opt/bitnami/scripts/spark/entrypoint.sh /opt/bitnami/scripts/spark/run.sh"]


  # cassandra:
  #   image: cassandra:3
  #   container_name: cassandradb-container
  #   ports:
  #   - "7000:7000"
  #   - "9042:9042"
  #   environment:
  #   - "CASSANDRA_CLUSTER_NAME=OUR_DOCKERIZED_CASSANDRA_SINGLE_NODE_CLUSTER"
